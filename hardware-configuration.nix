# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "thunderbolt" "nvme" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel nested=1" ];
  boot.kernelParams = [ "mem_sleep_default=deep" ];
  boot.extraModulePackages = [ ];

#  services.udev.extraRules = ''
#        KERNEL=="i2c-[0-9]*", GROUP="i2c", MODE="0660"
#  '';
  hardware.i2c.enable = true;

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/56858d7f-2832-48c9-bae0-ca453e761ae8";
      fsType = "btrfs";
      options = [ "subvol=@root" ];
    };

  boot.initrd.luks.devices."nixcrypt".device = "/dev/disk/by-uuid/676b1263-f042-46fb-bc43-3b375d1bf59c";

  fileSystems."/.swapvol" =
    { device = "/dev/disk/by-uuid/56858d7f-2832-48c9-bae0-ca453e761ae8";
      fsType = "btrfs";
      options = [ "subvol=@swap" ];
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/D3AA-0350";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/56858d7f-2832-48c9-bae0-ca453e761ae8";
      fsType = "btrfs";
      options = [ "subvol=@home" ];
    };

  fileSystems."/nix" =
    { device = "/dev/disk/by-uuid/56858d7f-2832-48c9-bae0-ca453e761ae8";
      fsType = "btrfs";
      options = [ "subvol=@nix" ];
    };

  fileSystems."/persistent" =
    { device = "/dev/disk/by-uuid/56858d7f-2832-48c9-bae0-ca453e761ae8";
      fsType = "btrfs";
      options = [ "subvol=@persistent" ];
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp0s20f3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
